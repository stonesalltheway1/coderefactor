name: Tests

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/*.md'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/*.md'
  workflow_dispatch:  # Allow manual triggering

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements/dev.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Check formatting with black
        run: black --check --diff coderefactor tests

      - name: Check imports with isort
        run: isort --check --diff coderefactor tests

      - name: Lint with flake8
        run: |
          flake8 coderefactor tests --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 coderefactor tests --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

      - name: Static type checking with mypy
        run: mypy coderefactor

      - name: Security check with bandit
        run: bandit -r coderefactor -s B101,B104,B311

  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: code-quality
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        exclude:
          # Exclude combinations to optimize CI time
          - os: windows-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.9'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'requirements/test.txt'

      - name: Set up Node.js (for web analysis tools)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: |
          npm install -g eslint stylelint htmlhint prettier

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/test.txt
          pip install -e .

      - name: Set up .NET SDK
        if: matrix.os != 'macos-latest'  # Skip .NET on macOS
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Run pytest with coverage
        run: |
          pytest --cov=coderefactor --cov-report=xml --cov-report=term tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  docs-test:
    name: Test documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements/docs.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/docs.txt
          pip install -e .

      - name: Test documentation build
        run: |
          mkdocs build --strict
          doc8 docs/

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements/test.txt'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node.js dependencies
        run: |
          npm install -g eslint stylelint htmlhint prettier

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/test.txt
          pip install -e .

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Run integration tests
        run: |
          pytest tests/integration/ -v

      - name: Test CLI commands
        run: |
          # Ensure CLI commands work
          coderefactor --version
          coderefactor analyze --help